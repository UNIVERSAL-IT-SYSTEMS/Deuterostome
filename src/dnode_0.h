/*=================== D machine Rev3.0: dnode_0.c =====================

  Include module for dnode.c: operator and error lists of dnode.
*/

/*--- LL */
P op_loadlib(void);
P op_nextlib(void);
P op_getplugindir(void);

/*--- threads */
P op_makethreads(void);
P op_threads(void);

#include "matrix.h"

B *sysop[] = {
  (B*)"lock",        (B*) op_lock,
  (B*)"serialize",   (B*) op_serialize,
#if ENABLE_THREADS
  (B*)"threads",     (B*) op_threads,
  (B*)"makethreads", (B*) op_makethreads,
#endif //ENABLE_THREADS

/*-- hi */
  (B*)"hi",            (B*) op_syshi,
  (B*)"libnum",        (B*) op_syslibnum,
  
/*-- load library */
  (B*)"loadlib",       (B*) op_loadlib,
  (B*)"nextlib",       (B*) op_nextlib,
      
/*-- dnode specific */
  (B*)"toconsole",      (B *)op_toconsole,
  (B*)"tostderr",       (B *)op_tostderr,
  (B*)"setconsole",     (B *)op_setconsole,
  (B*)"console",        (B *)op_console,
  (B*)"error",          (B *)op_error,
  (B*)"errormessage",   (B *)op_errormessage,
  (B*)"abort",          (B *)op_abort,
  (B*)"halt",           (B *)op_halt,
  (B*)"continue",       (B *)op_continue,
  (B*)"vmresize",       (B *)op_vmresize,
  (B*)"killsockets",    (B *)op_killsockets,
  (B*)"getmyport",      (B *)op_getmyport,
  
/*-- network */
  (B*)"connect",        (B *)op_connect,
  (B*)"disconnect",     (B *)op_disconnect,
  (B*)"send",           (B *)op_send,
  (B*)"getsocket",      (B *)op_getsocket,
  (B*)"getmyname",      (B *)op_getmyname,
  
/*-- X windows */
  (B*)"Xwindows",       (B *)op_Xwindows,
  (B*)"Xwindows_",      (B *)op_Xwindows_,
  (B*)"Xconnect",       (B *)op_Xconnect,
  (B*)"Xdisplayname",   (B *)op_Xdisplayname,
  (B*)"Xdisconnect",    (B *)op_Xdisconnect,
  (B*)"screensize",     (B *)op_screensize,
  (B*)"makewindow",     (B *)op_makewindow,
  (B*)"deletewindow",   (B *)op_deletewindow,
  (B*)"mapwindow",      (B *)op_mapwindow,
  (B*)"resizewindow",   (B *)op_resizewindow,
  (B*)"Xsync",          (B *)op_Xsync,
  (B*)"mapcolor",       (B *)op_mapcolor,
  (B*)"drawline",       (B *)op_drawline,
  (B*)"drawsymbols",    (B *)op_drawsymbols,
  (B*)"fillrectangle",  (B *)op_fillrectangle,
  (B*)"drawtext",       (B *)op_drawtext,
  (B*)"makewindowtop",  (B *)op_makewindowtop,
  (B*)"setinputfocus",  (B *)op_setinputfocus,

/*-- operand stack */
  (B*)"pop",            (B *)op_pop,
  (B*)"exch",           (B *)op_exch,
  (B*)"dup",            (B *)op_dup,
  (B*)"copy",           (B *)op_copy,
  (B*)"index",          (B *)op_index,
  (B*)"roll",           (B *)op_roll,
  (B*)"clear",          (B *)op_clear,
  (B*)"count",          (B *)op_count,
  (B*)"cleartomark",    (B *)op_cleartomark,
  (B*)"counttomark",    (B *)op_counttomark,
/*-- dictionary, array, list */
  (B*)"currentdict",    (B *)op_currentdict,
  (B*)"]",              (B *)op_closelist, 
  (B*)"dict",           (B *)op_dict,
  (B*)"cleardict",      (B *)op_cleardict,
  (B*)"array",          (B *)op_array,
  (B*)"list",           (B *)op_list,
  (B*)"used",           (B *)op_used,
  (B*)"length",         (B *)op_length, 
  (B*)"begin",          (B *)op_begin,
  (B*)"end",            (B *)op_end,
  (B*)"def",            (B *)op_def,
  (B*)"name",           (B *)op_name,
  (B*)"find",           (B *)op_find,
  (B*)"get",            (B *)op_get,
  (B*)"put",            (B *)op_put,
  (B*)"known",          (B *)op_known,
  (B*)"getinterval",    (B *)op_getinterval,
  (B*)"countdictstack", (B *)op_countdictstack,
  (B*)"dictstack",      (B *)op_dictstack,
/*-- VM and miscellaneous */
  (B*)"save",           (B *)op_save,
  (B*)"capsave",        (B *)op_capsave,
  (B*)"restore",        (B *)op_restore,
  (B*)"setcleanup",     (B *)op_setcleanup,
  (B*)"vmstatus",       (B *)op_vmstatus,
  (B*)"bind",           (B *)op_bind,
  (B*)"null",           (B *)op_null,
/*-- control */
  (B*)"start",          (B *)op_start,
  (B*)"exec",           (B *)op_exec,
  (B*)"if",             (B *)op_if,
  (B*)"ifelse",         (B *)op_ifelse,
  (B*)"for",            (B *)op_for,
  (B*)"repeat",         (B *)op_repeat,
  (B*)"loop",           (B *)op_loop,
  (B*)"forall",         (B *)op_forall,
  (B*)"exit",           (B *)op_exit,
  (B*)"stop",           (B *)op_stop,
  (B*)"stopped",        (B *)op_stopped,
  (B*)"countexecstack", (B *)op_countexecstack,
  (B*)"execstack",      (B *)op_execstack,
/*-- math */
  (B*)"checkFPU",       (B *)op_checkFPU,
  (B*)"neg",            (B *)op_neg,
  (B*)"abs",            (B *)op_abs,
  (B*)"thearc",         (B *)op_thearc, 
  (B*)"add",            (B *)op_add,
  (B*)"mod",            (B *)op_mod,
  (B*)"sub",            (B *)op_sub,
  (B*)"mul",            (B *)op_mul,
  (B*)"div",            (B *)op_div,
  (B*)"sqrt",           (B *)op_sqrt,
  (B*)"exp",            (B *)op_exp,
  (B*)"ln",             (B *)op_ln,
  (B*)"lg",             (B *)op_lg,
  (B*)"pwr",            (B *)op_pwr,
  (B*)"cos",            (B *)op_cos,
  (B*)"sin",            (B *)op_sin,
  (B*)"tan",            (B *)op_tan,
  (B*)"atan",           (B *)op_atan,
  (B*)"floor",          (B *)op_floor,
  (B*)"ceil",           (B *)op_ceil,
  (B*)"asin",           (B *)op_asin,
  (B*)"acos",           (B *)op_acos,
/*-- relational, boolean, bitwise */ 
  (B*)"eq",             (B *)op_eq,
  (B*)"ne",             (B *)op_ne,
  (B*)"ge",             (B *)op_ge,
  (B*)"gt",             (B *)op_gt,
  (B*)"le",             (B *)op_le,
  (B*)"lt",             (B *)op_lt,
  (B*)"and",            (B *)op_and,
  (B*)"not",            (B *)op_not,
  (B*)"or",             (B *)op_or,
  (B*)"xor",            (B *)op_xor,
  (B*)"bitshift",       (B *)op_bitshift,
/*-- conversion, string, attribute, class ,type */
  (B*)"class",          (B *)op_class,
  (B*)"type",           (B *)op_type,
  (B*)"readonly",       (B *)op_readonly,
  (B*)"active",         (B *)op_active,
  (B*)"tilde",          (B *)op_tilde,
  (B*)"mkread",         (B *)op_mkread,
  (B*)"mkact",          (B *)op_mkact,
  (B*)"mkpass",         (B *)op_mkpass,
  (B*)"ctype",          (B *)op_ctype,
  (B*)"parcel",         (B *)op_parcel,
  (B*)"text",           (B *)op_text,
  (B*)"number",         (B *)op_number,
  (B*)"token",          (B *)op_token,
  (B*)"search",         (B *)op_search,
  (B*)"anchorsearch",   (B *)op_anchorsearch,
/*-- time/date and file access */
  (B*)"gettime",        (B *)op_gettime,
  (B*)"localtime",      (B *)op_localtime,
  (B*)"getwdir",        (B *)op_getwdir,
  (B*)"setwdir",        (B *)op_setwdir,
  (B*)"readfile",       (B *)op_readfile,
  (B*)"writefile",      (B *)op_writefile,
  (B*)"findfiles",      (B *)op_findfiles,
  (B*)"findfile",       (B *)op_findfile,
  (B*)"readboxfile",    (B *)op_readboxfile,
  (B*)"writeboxfile",   (B *)op_writeboxfile,
  (B*)"tosystem",       (B *)op_tosystem,
  (B*)"fromsystem",     (B *)op_fromsystem,
  (B*)"transcribe",     (B *)op_transcribe,
/*-- more ... */
  (B*)"fax",            (B *)op_fax,
  (B*)"merge",          (B *)op_merge,
  (B*)"nextobject",     (B *)op_nextobject,
  (B*)"interpolate",    (B *)op_interpolate,
  (B*)"integrateOH",    (B *)op_integrateOH,
  (B*)"extrema",        (B *)op_extrema,
  (B*)"solvetridiag",   (B *)op_solvetridiag,
  (B*)"integrateOHv",   (B *)op_integrateOHv,
  (B*)"tile",           (B *)op_tile,
  (B*)"ramp",           (B *)op_ramp,
  (B*)"extract",        (B *)op_extract,
  (B*)"dilute",         (B *)op_dilute,
  (B*)"ran1",           (B *)op_ran1,
  (B*)"solve_bandmat",  (B *)op_solve_bandmat,
  (B*)"complexFFT",     (B *)op_complexFFT,
  (B*)"realFFT",        (B *)op_realFFT,
  (B*)"sineFFT",        (B *)op_sineFFT,
  (B*)"decompLU",       (B *)op_decompLU,
  (B*)"backsubLU",      (B *)op_backsubLU,
  (B*)"integrateRS",    (B *)op_integrateRS,
  (B*)"bandLU",         (B *)op_bandLU,
  (B*)"bandBS",         (B *)op_bandBS,
  (B*)"invertLU",       (B *)op_invertLU,
  (B*)"matmul",         (B *)op_matmul,
  (B*)"mattranspose",   (B *)op_mattranspose,
  (B*)"dilute_add",     (B *)op_dilute_add,
  (B*)"matvecmul",      (B *)op_matvecmul,
  (B*)"getstartupdir",  (B *)op_getstartupdir,
  (B*)"getconfdir",     (B *)op_getconfdir,
  (B*)"gethomedir",     (B *)op_gethomedir,
  (B*)"getplugindir",   (B *)op_getplugindir,
#if DM_ENABLE_REGEX			
  (B*)"regex",          (B *)op_regex,
  (B*)"regexi",         (B *)op_regexi,
#endif //DM_ENABLE_REGEX			
#if BUILD_ATLAS
  (B*)"matmul_blas",    (B *)op_matmul_blas,
  (B*)"decompLU_lp",    (B *)op_decompLU_lp,
  (B*)"backsubLU_lp",   (B *)op_backsubLU_lp,
  (B*)"invertLU_lp",    (B *)op_invertLU_lp,
  (B*)"norm2",          (B *)op_norm2,
  (B*)"matvecmul_blas", (B *)op_matvecmul_blas,
  (B*)"triangular_solve",(B *)op_triangular_solve,
  (B*)"givens_blas",    (B *)op_givens_blas,
  (B*)"rotate_blas",    (B *)op_rotate_blas,
#endif //BUILD_ATLAS
  (B*)"",               (B *)0L, 
};     
   
   
/*========================== Error Table =================================

This has been expanded in order to accommodate external operator errors.
'errm' and 'errc' now are arrays of pointers rather than arrays of messages
or codes. Each pointer denotes an array of messages or codes; the first
pointer belongs to the basic dnode operator set.
*/

P syserrc[] = {
  TIMER,CORR_OBJ,VM_OVF, LOST_CONN,
  OPDS_OVF, EXECS_OVF, DICTS_OVF, SAVE_OVF,
  OPDS_UNF, EXECS_UNF, DICTS_UNF, SAVE_UNF,
  INV_EXT, INV_STOP, EXECS_COR, INV_REST, 
  BAD_TOK, BAD_ASC, ARR_CLO, CLA_ARR, PRO_CLO,
  OPD_CLA, OPD_TYP, OPD_ERR, RNG_CHK, OPD_ATR, UNDF, DICT_ATR,
  DICT_OVF, DICT_USED, UNDF_VAL, DIR_NOSUCH,
  CORR_OP, BADBOX, BAD_MSG, NOSYSTEM, INV_MSG, NOT_HOST, BAD_FMT,
  LIB_LOAD, LIB_EXPORT, LIB_LINK, LIB_ADD, LIB_LOADED, LIB_OVF, LIB_MERGE,
  LIB_INIT,
  NO_XWINDOWS, X_ERR, X_BADFONT, X_BADHOST,
	VMR_ERR, VMR_STATE, ILL_OPAQUE, FOLD_OPAQUE, NOPLUGINS,
  MEM_OVF, BAD_ARR, SBOX_SET,
#if DM_ENABLE_REGEX		
  REGEX_BADPAT, REGEX_ECOLLATE, REGEX_ECTYPE, REGEX_EESCAPE,
  REGEX_ESUBREG, REGEX_EBRACK, REGEX_EPAREN, REGEX_EBRACE, REGEX_BADBR,
  REGEX_ERANGE, REGEX_ESPACE, REGEX_BADRPT, REGEX_UNKNOWN,
#endif // DM_ENABLE_REGEX		
  MATRIX_UNDEF_CUT,
  MATRIX_ILLEGAL_CUT,
  MATRIX_UNDER_CUT,
  MATRIX_NONMATCH_CUT,
  MATRIX_NONMATCH_SHAPE,
  MATRIX_PARAM_ERROR,
  MATRIX_SINGULAR,
  CLOCK_ERR, LONG_OVF,
  0L
};

B* syserrm[] = {
  (B*)"** Timeout",
  (B*)"** Corrupted object",
  (B*)"** VM overflow",
  (B*)"** Lost connection",
  (B*)"** Operand stack overflow",
  (B*)"** Execution stack overflow",
  (B*)"** Dictionary stack overflow",
  (B*)"** Save stack overflow",
  (B*)"** Operand stack underflow",
  (B*)"** Execution stack underflow",
  (B*)"** Dictionary stack underflow",
  (B*)"** Save stack underflow",
  (B*)"** Invalid exit",
  (B*)"** Invalid stop",
  (B*)"** Execution stack corrupted",
  (B*)"** Stack holds discardable object",
  (B*)"** Bad token",
  (B*)"** Bad ASCII character",
  (B*)"** Unmatched array closure",
  (B*)"** Illegal class in array",
  (B*)"** Unmatched procedure closure",
  (B*)"** Operand class",
  (B*)"** Operand type in ",
  (B*)"** Operand class or type",
  (B*)"** Range check",
  (B*)"** Operand attribute",
  (B*)"** Undefined name",
  (B*)"** Dictionary attribute",
  (B*)"** Dictionary overflow",
  (B*)"** Dictionary used",
  (B*)"** Undefined value",
  (B*)"** No such directory/volume",
  (B*)"** Corrupted operator array",
  (B*)"** File does not contain a box object",
  (B*)"** Bad message received on network",
  (B*)"** 'System' call to Linux failed",
  (B*)"** Invalid message format",
  (B*)"** Hostname not in 'hosts' file",
  (B*)"** Box not in native format",
  (B*)"** Unable to load dynamically linked shared library",
  (B*)"** Unable to find object in shared library",
  (B*)"** Library has not been loaded",
  (B*)"** Unable to add operation to library dictionary",
  (B*)"** Library already loaded",
  (B*)"** Overflow in malloc while loading library",
  (B*)"** Unable to merge library into sysdict",
  (B*)"** Unable to initialize loaded library",
  (B*)"** X windows unavailable",
  (B*)"** Error in X windows",
  (B*)"** Bad X windows font",
  (B*)"** Cannot connect to X server",
	(B*)"** Cannot allocate D memory",
	(B*)"** Memory already minimized",
	(B*)"** Opaque dict type mismatch",
	(B*)"** Illegal attempt to fold opaque object",
	(B*)"** Compiled without plugin support",
	(B*)"** Memory exhausted",
  (B*)"** dmnuminc debug error",
  (B*)"** Box already has a cleanup handler",
#if DM_ENABLE_REGEX
  (B*)"Regex Error: Invalid regular expression",
  (B*)"Regex Error: Invalid collating element",
  (B*)"Regex Error: Invalid character class",
  (B*)"Regex Error: `\' applied to unescapable character",
  (B*)"Regex Error: invalid backreference number",
  (B*)"Regex Error: brackets `[]' not balanced",
  (B*)"Regex Error: paranthesis `()' not balanced",
  (B*)"Regex Error: braces `{}' not balanced",
  (B*)"Regex Error: invalid repetition count(s) in `{}'",
  (B*)"Regex Error: invalid character rangin in `[]'",
  (B*)"Regex Error: ran out of memory",
  (B*)"Regex Error: `?', `*', or `+' operand invalid",
  (B*)"Regex Error: Unknown error",
#endif // DM_ENABLE_REGEX
  (B*)"Matrix Error: undefined value in cut",
  (B*)"Matrix Error: cut dimension less than 1",
  (B*)"Matrix Error: number of cut dimensions too small",
  (B*)"Matrix Error: array too small for cut",
  (B*)"Matrix Error: matrix operand dimensions don't match",
  (B*)"Matrix Error: parameters to clapack illegal",
  (B*)"Matrix Error: lu matrix is singular",
  (B*)"** Error accessing clock",
  (B*)"** Error loading 64 bit integer into 32 bit machine"  
};

// original directory for vmresize
char* original_dir;
P serverport;
B hostname[256];
