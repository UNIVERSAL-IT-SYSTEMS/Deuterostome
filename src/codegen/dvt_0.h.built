// Automatically produced from src/codegen/ops.d
// DO NOT EDIT HERE!

B* _sysop[] = 
{
  (B*) "error", (B*) op_error,
  (B*) "errormessage", (B*) op_errormessage,
  (B*) "abort", (B*) op_abort,
  (B*) "aborted", (B*) op_aborted,
  (B*) "toconsole", (B*) op_toconsole,
  (B*) "tostderr", (B*) op_tostderr,
  (B*) "pop", (B*) op_pop,
  (B*) "exch", (B*) op_exch,
  (B*) "dup", (B*) op_dup,
  (B*) "copy", (B*) op_copy,
  (B*) "index", (B*) op_index,
  (B*) "roll", (B*) op_roll,
  (B*) "clear", (B*) op_clear,
  (B*) "count", (B*) op_count,
  (B*) "cleartomark", (B*) op_cleartomark,
  (B*) "counttomark", (B*) op_counttomark,
  (B*) "currentdict", (B*) op_currentdict,
  (B*) "dict", (B*) op_dict,
  (B*) "cleardict", (B*) op_cleardict,
  (B*) "array", (B*) op_array,
  (B*) "list", (B*) op_list,
  (B*) "used", (B*) op_used,
  (B*) "length", (B*) op_length,
  (B*) "last", (B*) op_last,
  (B*) "begin", (B*) op_begin,
  (B*) "end", (B*) op_end,
  (B*) "def", (B*) op_def,
  (B*) "name", (B*) op_name,
  (B*) "find", (B*) op_find,
  (B*) "get", (B*) op_get,
  (B*) "put", (B*) op_put,
  (B*) "known", (B*) op_known,
  (B*) "getinterval", (B*) op_getinterval,
  (B*) "countdictstack", (B*) op_countdictstack,
  (B*) "dictstack", (B*) op_dictstack,
  (B*) "save", (B*) op_save,
  (B*) "capsave", (B*) op_capsave,
  (B*) "restore", (B*) op_restore,
  (B*) "vmstatus", (B*) op_vmstatus,
  (B*) "getplugindir", (B*) op_getplugindir,
  (B*) "bind", (B*) op_bind,
  (B*) "null", (B*) op_null,
  (B*) "not", (B*) op_not,
  (B*) "start", (B*) op_start,
  (B*) "exec", (B*) op_exec,
  (B*) "if", (B*) op_if,
  (B*) "ifelse", (B*) op_ifelse,
  (B*) "for", (B*) op_for,
  (B*) "repeat", (B*) op_repeat,
  (B*) "loop", (B*) op_loop,
  (B*) "forall", (B*) op_forall,
  (B*) "exit", (B*) op_exit,
  (B*) "stop", (B*) op_stop,
  (B*) "stopped", (B*) op_stopped,
  (B*) "countexecstack", (B*) op_countexecstack,
  (B*) "execstack", (B*) op_execstack,
  (B*) "checkFPU", (B*) op_checkFPU,
  (B*) "neg", (B*) op_neg,
  (B*) "abs", (B*) op_abs,
  (B*) "thearc", (B*) op_thearc,
  (B*) "add", (B*) op_add,
  (B*) "mod", (B*) op_mod,
  (B*) "sub", (B*) op_sub,
  (B*) "mul", (B*) op_mul,
  (B*) "div", (B*) op_div,
  (B*) "sqrt", (B*) op_sqrt,
  (B*) "exp", (B*) op_exp,
  (B*) "ln", (B*) op_ln,
  (B*) "lg", (B*) op_lg,
  (B*) "pwr", (B*) op_pwr,
  (B*) "cos", (B*) op_cos,
  (B*) "sin", (B*) op_sin,
  (B*) "tan", (B*) op_tan,
  (B*) "atan", (B*) op_atan,
  (B*) "floor", (B*) op_floor,
  (B*) "ceil", (B*) op_ceil,
  (B*) "acos", (B*) op_acos,
  (B*) "eq", (B*) op_eq,
  (B*) "ne", (B*) op_ne,
  (B*) "ge", (B*) op_ge,
  (B*) "gt", (B*) op_gt,
  (B*) "le", (B*) op_le,
  (B*) "lt", (B*) op_lt,
  (B*) "and", (B*) op_and,
  (B*) "or", (B*) op_or,
  (B*) "xor", (B*) op_xor,
  (B*) "bitshift", (B*) op_bitshift,
  (B*) "class", (B*) op_class,
  (B*) "type", (B*) op_type,
  (B*) "readonly", (B*) op_readonly,
  (B*) "active", (B*) op_active,
  (B*) "tilde", (B*) op_tilde,
  (B*) "mkread", (B*) op_mkread,
  (B*) "mkact", (B*) op_mkact,
  (B*) "mkpass", (B*) op_mkpass,
  (B*) "mktilde", (B*) op_mktilde,
  (B*) "closelist", (B*) op_closelist,
  (B*) "openlist", (B*) op_openlist,
  (B*) "ctype", (B*) op_ctype,
  (B*) "parcel", (B*) op_parcel,
  (B*) "text", (B*) op_text,
  (B*) "number", (B*) op_number,
  (B*) "token", (B*) op_token,
  (B*) "search", (B*) op_search,
  (B*) "anchorsearch", (B*) op_anchorsearch,
  (B*) "gettime", (B*) op_gettime,
  (B*) "gettimeofday", (B*) op_gettimeofday,
  (B*) "profiletime", (B*) op_profiletime,
  (B*) "localtime", (B*) op_localtime,
  (B*) "getwdir", (B*) op_getwdir,
  (B*) "setwdir", (B*) op_setwdir,
  (B*) "readfile", (B*) op_readfile,
  (B*) "writefile", (B*) op_writefile,
  (B*) "findfiles", (B*) op_findfiles,
  (B*) "findfile", (B*) op_findfile,
  (B*) "readboxfile", (B*) op_readboxfile,
  (B*) "writeboxfile", (B*) op_writeboxfile,
  (B*) "transcribe", (B*) op_transcribe,
  (B*) "fax", (B*) op_fax,
  (B*) "merge", (B*) op_merge,
  (B*) "nextobject", (B*) op_nextobject,
  (B*) "interpolate", (B*) op_interpolate,
  (B*) "integrateOH", (B*) op_integrateOH,
  (B*) "extrema", (B*) op_extrema,
  (B*) "solvetridiag", (B*) op_solvetridiag,
  (B*) "integrateOHv", (B*) op_integrateOHv,
  (B*) "tile", (B*) op_tile,
  (B*) "ramp", (B*) op_ramp,
  (B*) "extract", (B*) op_extract,
  (B*) "dilute", (B*) op_dilute,
  (B*) "ran1", (B*) op_ran1,
  (B*) "solve_bandmat", (B*) op_solve_bandmat,
  (B*) "complexFFT", (B*) op_complexFFT,
  (B*) "realFFT", (B*) op_realFFT,
  (B*) "sineFFT", (B*) op_sineFFT,
  (B*) "decompLU", (B*) op_decompLU,
  (B*) "backsubLU", (B*) op_backsubLU,
  (B*) "integrateRS", (B*) op_integrateRS,
  (B*) "bandLU", (B*) op_bandLU,
  (B*) "bandBS", (B*) op_bandBS,
  (B*) "invertLU", (B*) op_invertLU,
  (B*) "matmul", (B*) op_matmul,
  (B*) "mattranspose", (B*) op_mattranspose,
  (B*) "dilute_add", (B*) op_dilute_add,
  (B*) "matvecmul", (B*) op_matvecmul,
  (B*) "getstartupdir", (B*) op_getstartupdir,
  (B*) "gethomedir", (B*) op_gethomedir,
  (B*) "getconfdir", (B*) op_getconfdir,
  (B*) "socketval", (B*) op_socketval,
  (B*) "getmyname", (B*) op_getmyname,
  (B*) "getmyfqdn", (B*) op_getmyfqdn,
  (B*) "connect", (B*) op_connect,
  (B*) "disconnect", (B*) op_disconnect,
  (B*) "send", (B*) op_send,
  (B*) "getsocket", (B*) op_getsocket,
  (B*) "sendsig", (B*) op_sendsig,
  (B*) "socketdead", (B*) op_socketdead,
  (B*) "Xwindows", (B*) op_Xwindows,
  (B*) "Xdisplayname", (B*) op_Xdisplayname,
  (B*) "screensize", (B*) op_screensize,
  (B*) "makewindow", (B*) op_makewindow,
  (B*) "deletewindow", (B*) op_deletewindow,
  (B*) "mapwindow", (B*) op_mapwindow,
  (B*) "resizewindow", (B*) op_resizewindow,
  (B*) "Xsync", (B*) op_Xsync,
  (B*) "mapcolor", (B*) op_mapcolor,
  (B*) "drawline", (B*) op_drawline,
  (B*) "drawsymbols", (B*) op_drawsymbols,
  (B*) "fillrectangle", (B*) op_fillrectangle,
  (B*) "drawtext", (B*) op_drawtext,
  (B*) "makewindowtop", (B*) op_makewindowtop,
  (B*) "Xauth", (B*) op_Xauth,
  (B*) "Xauthrev", (B*) op_Xauthrev,
  (B*) "Xauthgen", (B*) op_Xauthgen,
  (B*) "Xauthset", (B*) op_Xauthset,
  (B*) "nextevent", (B*) op_nextevent,
#ifdef DM_ENABLE_REGEX
  (B*) "regex", (B*) op_regex,
  (B*) "regexi", (B*) op_regexi,
  (B*) "regexs", (B*) op_regexs,
  (B*) "regexsi", (B*) op_regexsi,
#endif //DM_ENABLE_REGEX
  (B*) "die", (B*) op_die,
  (B*) "quit", (B*) op_quit,
  (B*) "fork", (B*) op_fork,
  (B*) "killpid", (B*) op_killpid,
  (B*) "waitpid", (B*) op_waitpid,
  (B*) "checkpid", (B*) op_checkpid,
  (B*) "getpid", (B*) op_getpid,
  (B*) "getppid", (B*) op_getppid,
  (B*) "unpid", (B*) op_unpid,
  (B*) "spawn", (B*) op_spawn,
  (B*) "copyfd", (B*) op_copyfd,
  (B*) "readonlyfd", (B*) op_readonlyfd,
  (B*) "makefd", (B*) op_makefd,
  (B*) "unmakefd", (B*) op_unmakefd,
  (B*) "dupfd", (B*) op_dupfd,
  (B*) "pipefd", (B*) op_pipefd,
  (B*) "openfd", (B*) op_openfd,
  (B*) "readfd", (B*) op_readfd,
  (B*) "readtomarkfd", (B*) op_readtomarkfd,
  (B*) "readtomarkfd_nb", (B*) op_readtomarkfd_nb,
  (B*) "tmpfile", (B*) op_tmpfile,
  (B*) "tmpdir", (B*) op_tmpdir,
  (B*) "rmpath", (B*) op_rmpath,
  (B*) "finddir", (B*) op_finddir,
  (B*) "suckfd", (B*) op_suckfd,
  (B*) "closedfd", (B*) op_closedfd,
  (B*) "getfd", (B*) op_getfd,
  (B*) "ungetfd", (B*) op_ungetfd,
  (B*) "writefd", (B*) op_writefd,
  (B*) "closefd", (B*) op_closefd,
  (B*) "lockfd", (B*) op_lockfd,
  (B*) "unlockfd", (B*) op_unlockfd,
  (B*) "trylockfd", (B*) op_trylockfd,
  (B*) "glob", (B*) op_glob,
  (B*) "setenv", (B*) op_setenv,
  (B*) "getenv", (B*) op_getenv,
  (B*) "console", (B*) op_console,
  (B*) "setconsole", (B*) op_setconsole,
  (B*) "]", (B*) op_closelist,
  (B*) "", (B*) NULL
};

P _syserrc[] = {
  ABORT,
  QUIT,
  TERM,
  MORE,
  DONE,
  TIMER,
  CORR_OBJ,
  VM_OVF,
  OPDS_OVF,
  EXECS_OVF,
  DICTS_OVF,
  OPDS_UNF,
  EXECS_UNF,
  DICTS_UNF,
  INV_EXT,
  INV_STOP,
  EXECS_COR,
  INV_REST,
  BAD_TOK,
  BAD_ASC,
  ARR_CLO,
  CLA_ARR,
  PRO_CLO,
  OPD_CLA,
  OPD_TYP,
  OPD_ERR,
  RNG_CHK,
  OPD_ATR,
  UNDF,
  DICT_ATR,
  DICT_OVF,
  DICT_USED,
  UNDF_VAL,
  DIR_NOSUCH,
  BADBOX,
  BAD_MSG,
  NOSYSTEM,
  INV_MSG,
  BAD_FMT,
  MEM_OVF,
  BAD_ARR,
  CLOCK_ERR,
  LONG_OVF,
  ILL_RECAP,
  READ_ERROR,
  SOCK_STATE,
  UNKNOWN_ERR,
  BUF_OVF,
  LOST_CONN,
  ILL_SOCK,
  DEAD_SOCKET,
  NEXTEVENT_NOEVENT,
  NO_XWINDOWS,
  X_ERR,
  X_BADFONT,
  X_BADHOST,
  X_SEC_MISS,
  X_SEC_GEN,
  X_SEC_REV,
  X_SEC_LIB,
#ifdef DM_ENABLE_REGEX
  REGEX_BADPAT,
  REGEX_ECOLLATE,
  REGEX_ECTYPE,
  REGEX_EESCAPE,
  REGEX_ESUBREG,
  REGEX_EBRACK,
  REGEX_EPAREN,
  REGEX_EBRACE,
  REGEX_BADBR,
  REGEX_ERANGE,
  REGEX_ESPACE,
  REGEX_BADRPT,
  REGEX_UNKNOWN,
#endif //DM_ENABLE_REGEX
  FILE_NOSUCH,
  DIR_NOTEMPTY,
  CHILD_FAILURE,
  STREAM_CLOSED,
  STREAM_DIR,
  STREAM_EPIPE,
  STREAM_OVF,
  0L
};

B* _syserrm[] = {
  (B*) "** Internal ABORT returned -- should never appear as error",
  (B*) "** Internal QUIT returned -- should never appear as error",
  (B*) "** Internal TERM returned -- should never appear as error",
  (B*) "** Internal MORE returned -- should never appear as error",
  (B*) "** Internal DONE returned -- should never appear as error",
  (B*) "** Timeout",
  (B*) "** Corrupted object",
  (B*) "** VM overflow",
  (B*) "** Operand stack overflow",
  (B*) "** Execution stack overflow",
  (B*) "** Dictionary stack overflow",
  (B*) "** Operand stack underflow",
  (B*) "** Execution stack underflow",
  (B*) "** Dictionary stack underflow",
  (B*) "** Invalid exit",
  (B*) "** Invalid stop",
  (B*) "** Excution stack corrupted",
  (B*) "** Stack holds discardable object",
  (B*) "** Bad token",
  (B*) "** Bad ASCII character",
  (B*) "** Unmatched array closure",
  (B*) "** Illegal class in array",
  (B*) "** Unmatched procedure closure",
  (B*) "** Operand class",
  (B*) "** Operand type",
  (B*) "** Operand class or type",
  (B*) "** Range check",
  (B*) "** Operand attribute",
  (B*) "** Undefined name",
  (B*) "** Dictionary attribute",
  (B*) "** Dictionary overflow",
  (B*) "** Dictionary used",
  (B*) "** Undefined value",
  (B*) "** No such directory",
  (B*) "** File does not contain a box object",
  (B*) "** Bad message received on network",
  (B*) "** 'System' call to OS failed",
  (B*) "** Invalid message format",
  (B*) "** Box not in native format",
  (B*) "** Memory exhausted",
  (B*) "** dmnuminc debug error",
  (B*) "** Error accessing clock",
  (B*) "** 64 bit integer overflow on load into 32 bit machine",
  (B*) "** Double capsave",
  (B*) "** Internal Read error",
  (B*) "** Attempt to change file descriptor state",
  (B*) "** Internal Unknown error",
  (B*) "** Internal buffer overflow",
  (B*) "** Lost connection",
  (B*) "** Attempted to send a signal to a socket without that capability",
  (B*) "** Dead socket",
  (B*) "** no socket events -- internal",
  (B*) "** X windows unavailable",
  (B*) "** Error in X windows",
  (B*) "** Bad X windows font",
  (B*) "** Cannot connect to X server",
  (B*) "** X Security Extension missing",
  (B*) "** X Security Extension unable to generate",
  (B*) "** X Security Extension unable to revoke",
  (B*) "** X Security library missing",
#ifdef DM_ENABLE_REGEX
  (B*) "Regex Error: Invalid regular expression",
  (B*) "Regex Error: Invalid collating element",
  (B*) "Regex Error: Invalid character class",
  (B*) "Regex Error: `\' applied to unescapable character",
  (B*) "Regex Error: invalid backreference number",
  (B*) "Regex Error: brackets `[]' not balanced",
  (B*) "Regex Error: paranthesis `()' not balanced",
  (B*) "Regex Error: braces `{}' not balanced",
  (B*) "Regex Error: invalid repetition count(s) in `{}'",
  (B*) "Regex Error: invalid character range in `[]'",
  (B*) "Regex Error: ran out of memory",
  (B*) "Regex Error: `?', `*', or `+' operand invalid",
  (B*) "Regex Error: Unknown error",
#endif //DM_ENABLE_REGEX
  (B*) "** No such file or directory",
  (B*) "** Directory not empty",
  (B*) "*** Child process failed",
  (B*) "*** Operation on closed stream",
  (B*) "*** operation on wrong direction stream",
  (B*) "*** Stream closed while attempting to write",
  (B*) "*** double unget on stream",
  (B*) NULL
};
