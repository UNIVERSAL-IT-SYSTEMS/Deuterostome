#ifndef DM_ERRS_H
#define DM_ERRS_H

// Automatically produced from src/codegen/ops.d
// DO NOT EDIT HERE!

#include "basic-defs.h"

#define OK                            ((P)        0L)
// ** Internal ABORT returned -- should never appear as error
#define ABORT                         ((P)        1L)
// ** Internal QUIT returned -- should never appear as error
#define QUIT                          ((P)        2L)
// ** Internal MORE returned -- should never appear as error
#define MORE                          ((P)        3L)
// ** Internal DONE returned -- should never appear as error
#define DONE                          ((P)        4L)
// ** Timeout
#define TIMER                         ((P)        5L)
// ** Corrupted object
#define CORR_OBJ                      ((P)        6L)
// ** VM overflow
#define VM_OVF                        ((P)        7L)
// ** Operand stack overflow
#define OPDS_OVF                      ((P)        8L)
// ** Execution stack overflow
#define EXECS_OVF                     ((P)        9L)
// ** Dictionary stack overflow
#define DICTS_OVF                     ((P)       10L)
// ** Operand stack underflow
#define OPDS_UNF                      ((P)       11L)
// ** Execution stack underflow
#define EXECS_UNF                     ((P)       12L)
// ** Dictionary stack underflow
#define DICTS_UNF                     ((P)       13L)
// ** Invalid exit
#define INV_EXT                       ((P)       14L)
// ** Invalid stop
#define INV_STOP                      ((P)       15L)
// ** Excution stack corrupted
#define EXECS_COR                     ((P)       16L)
// ** Stack holds discardable object
#define INV_REST                      ((P)       17L)
// ** Bad token
#define BAD_TOK                       ((P)       18L)
// ** Bad ASCII character
#define BAD_ASC                       ((P)       19L)
// ** Unmatched array closure
#define ARR_CLO                       ((P)       20L)
// ** Illegal class in array
#define CLA_ARR                       ((P)       21L)
// ** Unmatched procedure closure
#define PRO_CLO                       ((P)       22L)
// ** Operand class
#define OPD_CLA                       ((P)       23L)
// ** Operand type
#define OPD_TYP                       ((P)       24L)
// ** Operand class or type
#define OPD_ERR                       ((P)       25L)
// ** Range check
#define RNG_CHK                       ((P)       26L)
// ** Operand attribute
#define OPD_ATR                       ((P)       27L)
// ** Undefined name
#define UNDF                          ((P)       28L)
// ** Dictionary attribute
#define DICT_ATR                      ((P)       29L)
// ** Dictionary overflow
#define DICT_OVF                      ((P)       30L)
// ** Dictionary used
#define DICT_USED                     ((P)       31L)
// ** Undefined value
#define UNDF_VAL                      ((P)       32L)
// ** No such directory
#define DIR_NOSUCH                    ((P)       33L)
// ** File does not contain a box object
#define BADBOX                        ((P)       34L)
// ** Bad message received on network
#define BAD_MSG                       ((P)       35L)
// ** 'System' call to OS failed
#define NOSYSTEM                      ((P)       36L)
// ** Invalid message format
#define INV_MSG                       ((P)       37L)
// ** Box not in native format
#define BAD_FMT                       ((P)       38L)
// ** Memory exhausted
#define MEM_OVF                       ((P)       39L)
// ** dmnuminc debug error
#define BAD_ARR                       ((P)       40L)
// ** Error accessing clock
#define CLOCK_ERR                     ((P)       41L)
// ** 64 bit integer overflow on load into 32 bit machine
#define LONG_OVF                      ((P)       42L)
// ** Double capsave
#define ILL_RECAP                     ((P)       43L)
// ** Internal Read error
#define READ_ERROR                    ((P)       44L)
// ** Internal Unknown error
#define UNKNOWN_ERR                   ((P)       45L)
// ** Internal buffer overflow
#define BUF_OVF                       ((P)       46L)
#ifdef DM_ENABLE_REGEX
// Regex Error: Invalid regular expression
#define REGEX_BADPAT                  ((P)       47L)
// Regex Error: Invalid collating element
#define REGEX_ECOLLATE                ((P)       48L)
// Regex Error: Invalid character class
#define REGEX_ECTYPE                  ((P)       49L)
// Regex Error: `\' applied to unescapable character
#define REGEX_EESCAPE                 ((P)       50L)
// Regex Error: invalid backreference number
#define REGEX_ESUBREG                 ((P)       51L)
// Regex Error: brackets `[]' not balanced
#define REGEX_EBRACK                  ((P)       52L)
// Regex Error: paranthesis `()' not balanced
#define REGEX_EPAREN                  ((P)       53L)
// Regex Error: braces `{}' not balanced
#define REGEX_EBRACE                  ((P)       54L)
// Regex Error: invalid repetition count(s) in `{}'
#define REGEX_BADBR                   ((P)       55L)
// Regex Error: invalid character range in `[]'
#define REGEX_ERANGE                  ((P)       56L)
// Regex Error: ran out of memory
#define REGEX_ESPACE                  ((P)       57L)
// Regex Error: `?', `*', or `+' operand invalid
#define REGEX_BADRPT                  ((P)       58L)
// Regex Error: Unknown error
#define REGEX_UNKNOWN                 ((P)       59L)
#endif //DM_ENABLE_REGEX
// *** Operation on closed stream
#define STREAM_CLOSED                 ((P)       60L)
// *** operation on wrong direction stream
#define STREAM_DIR                    ((P)       61L)
// *** Stream closed while attempting to write
#define STREAM_EPIPE                  ((P)       62L)
// *** double unget on stream
#define STREAM_OVF                    ((P)       63L)
// ** Lost connection
#define LOST_CONN                     ((P)       64L)
// ** Attempted to send a signal to a socket without that capability
#define ILL_SOCK                      ((P)       65L)
// ** Dead socket
#define DEAD_SOCKET                   ((P)       66L)
// ** X windows unavailable
#define NO_XWINDOWS                   ((P)       67L)
// ** Error in X windows
#define X_ERR                         ((P)       68L)
// ** Bad X windows font
#define X_BADFONT                     ((P)       69L)
// ** Cannot connect to X server
#define X_BADHOST                     ((P)       70L)
// ** X Security Extension missing
#define X_SEC_MISS                    ((P)       71L)
// ** X Security Extension unable to generate
#define X_SEC_GEN                     ((P)       72L)
// ** X Security Extension unable to revoke
#define X_SEC_REV                     ((P)       73L)
// ** X Security library missing
#define X_SEC_LIB                     ((P)       74L)
// ** Unable to load dynamically linked library
#define LIB_LOAD                      ((P)       75L)
// ** Unable to find object in shared library
#define LIB_EXPORT                    ((P)       76L)
// ** Library has not been loaded
#define LIB_LINK                      ((P)       77L)
// ** Unable to add operator to library dictionary
#define LIB_ADD                       ((P)       78L)
// ** Library has already been loaded
#define LIB_LOADED                    ((P)       79L)
// ** Overflow in malloc while loading library
#define LIB_OVF                       ((P)       80L)
// ** Unable to merge library into sysdict
#define LIB_MERGE                     ((P)       81L)
// ** Unable to initialize loaded library
#define LIB_INIT                      ((P)       82L)
// ** Cannot allocate D memory
#define VMR_ERR                       ((P)       83L)
// ** Memory alread minimized
#define VMR_STATE                     ((P)       84L)
// ** Opaque dict type mismatch
#define ILL_OPAQUE                    ((P)       85L)
// ** Illegal attempt to fold opaque object
#define FOLD_OPAQUE                   ((P)       86L)
// ** Compiled without plugin support
#define NO_PLUGINS                    ((P)       87L)
#ifdef BUILD_ATLAS
#endif //BUILD_ATLAS
#ifdef HAVE_ATLAS
// Matrix Error: undefined value in cut
#define MATRIX_UNDEF_CUT              ((P)       88L)
// Matrix Error: cut dimension less than 1
#define MATRIX_ILLEGAL_CUT            ((P)       89L)
// Matrix Error: number of cut dimensions too small
#define MATRIX_UNDER_CUT              ((P)       90L)
// Matrix Error: array too small for cut
#define MATRIX_NONMATCH_CUT           ((P)       91L)
// Matrix Error: matrix dimensions don't match
#define MATRIX_NONMATCH_SHAPE         ((P)       92L)
// Matrix Error: parameters to clapack illegal
#define MATRIX_PARAM_ERROR            ((P)       93L)
// Matrix Error: Internal Error - message on stack
#define MATRIX_INT_ERR                ((P)       94L)
// Matrix Error: lu matrix is singular
#define MATRIX_SINGULAR               ((P)       95L)
#endif //HAVE_ATLAS
#ifdef DM_ENABLE_RTHREADS
// ** Rthreads are inactive
#define RTHREADS_UNSET                ((P)       96L)
// ** Rthreads: nodes for dictionay not a numeral
#define RTHREADS_NUMTYPE              ((P)       97L)
// ** Rthreads: nodes for dictionary undefined
#define RTHREADS_NUMUNDF              ((P)       98L)
// ** Rthreads: nodes for dictionary out of range
#define RTHREADS_NUMRNG               ((P)       99L)
// ** Rthreads: illegal class for info dictionary
#define RTHREADS_DICTTYPE             ((P)      100L)
// ** Rthreads: key/val pair: val not a string
#define RTHREADS_VALTYPE              ((P)      101L)
// ** Rthreads: key/val pair: val too long
#define RTHREADS_VALSIZE              ((P)      102L)
// ** Rthreads: key/val pair: val empty
#define RTHREADS_VALEMPTY             ((P)      103L)
// ** Rthreads: key/val pair: key too long
#define RTHREADS_KEYSIZE              ((P)      104L)
// ** Rthreads: key/val pair: val is active
#define RTHREADS_VALATR               ((P)      105L)
#endif //DM_ENABLE_RTHREADS
#ifdef DM_HOST_IS_32_BIT
#endif //DM_HOST_IS_32_BIT
// ** no socket events -- internal
#define NEXTEVENT_NOEVENT             ((P)      106L)
// ** No mpi message msg received -- internal
#define MPI_NOMSG                     ((P)      107L)

#endif //DM_ERRS_H
